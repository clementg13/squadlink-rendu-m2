name: Release Android Build

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Get version from tag
      run: |
        VERSION=${GITHUB_REF#refs/tags/}
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "Release version: $VERSION"

    - name: Install dependencies
      run: npm ci

    # 1. VÃ©rifier le lint et les tests
    - name: Run ESLint
      run: npm run lint:check

    - name: Run tests
      run: npm test -- --watchAll=false --passWithNoTests

    # 2. Setup Android pour le build
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Create environment file
      run: |
        echo "EXPO_PUBLIC_SUPABASE_URL=${{ secrets.EXPO_PUBLIC_SUPABASE_URL }}" > .env
        echo "EXPO_PUBLIC_SUPABASE_KEY=${{ secrets.EXPO_PUBLIC_SUPABASE_KEY }}" >> .env

    - name: Make gradlew executable
      run: chmod +x ./android/gradlew

    # 3. Build AAB
    - name: Build Android Release AAB
      run: |
        cd android
        ./gradlew bundleRelease

    # 4. Distribuer via Firebase App Distribution
    - name: Install Firebase CLI
      run: npm install -g firebase-tools

    - name: Distribute to Firebase App Distribution
      run: |
        firebase appdistribution:distribute \
          ./android/app/build/outputs/bundle/release/app-release.aab \
          --app ${{ secrets.FIREBASE_APP_ID }} \
          --token ${{ secrets.FIREBASE_TOKEN }} \
          --groups "testers" \
          --release-notes "Release ${{ env.VERSION }} - Built from tag on release branch"
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
